{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Downloads\\\\issues-page\\\\src\\\\components\\\\IssueList.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport useInfiniteScroll from '../hooks/useInfiniteScroll';\nimport Loading from './Loading';\nimport '../assets/index.css';\nimport CloseIssueIcon from './CloseIssueIcon';\nvar num = 1;\n\nfunction IssueList({\n  status\n}) {\n  _s();\n\n  const [isFetching, setIsFetching] = useInfiniteScroll(fetchMoreListItems);\n  const [data, setData] = useState([]);\n  useEffect(() => {});\n\n  function fetchMoreListItems() {\n    fetch(`http://localhost:9000/issues?page=${num += 1}&issuesFilter=${status}`).then(res => res.json()).then(res => setData([...data, ...res]));\n  }\n\n  useEffect(() => {\n    fetch(`http://localhost:9000/issues?page=1&issuesFilter=${status}`).then(res => res.json()).then(res => setData(res));\n  }, [status]);\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [data === undefined ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 23\n    }, this) : data.map(data => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"issues\",\n      \"data-testid\": \"issues\",\n      children: data.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 20\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"btn\",\n      onClick: fetchMoreListItems,\n      children: \"add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(IssueList, \"W1fyfjxsvRhxRGwFNlsREZCl5+Q=\", false, function () {\n  return [useInfiniteScroll];\n});\n\n_c = IssueList;\nexport default IssueList;\n\nvar _c;\n\n$RefreshReg$(_c, \"IssueList\");","map":{"version":3,"sources":["C:/Users/Lenovo/Downloads/issues-page/src/components/IssueList.js"],"names":["useEffect","useState","useInfiniteScroll","Loading","CloseIssueIcon","num","IssueList","status","isFetching","setIsFetching","fetchMoreListItems","data","setData","fetch","then","res","json","console","log","undefined","map","title"],"mappings":";;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,iBAAP,MAA8B,4BAA9B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,qBAAP;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,IAAIC,GAAG,GAAC,CAAR;;AACA,SAASC,SAAT,CAAmB;AAACC,EAAAA;AAAD,CAAnB,EAA6B;AAAA;;AAE3B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,iBAAiB,CAACQ,kBAAD,CAArD;AACA,QAAK,CAACC,IAAD,EAAMC,OAAN,IAAeX,QAAQ,CAAC,EAAD,CAA5B;AAGFD,EAAAA,SAAS,CAAC,MAAI,CAEb,CAFQ,CAAT;;AAIE,WAASU,kBAAT,GAA8B;AAE5BG,IAAAA,KAAK,CAAE,qCAAoCR,GAAG,IAAE,CAAE,iBAAgBE,MAAO,EAApE,CAAL,CAA4EO,IAA5E,CAAiFC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EAAtF,EACCF,IADD,CACMC,GAAG,IAAEH,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAS,GAAGI,GAAZ,CAAD,CADlB;AAGD;;AAMDf,EAAAA,SAAS,CAAC,MAAI;AACZa,IAAAA,KAAK,CAAE,oDAAmDN,MAAO,EAA5D,CAAL,CAAoEO,IAApE,CAAyEC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EAA9E,EACCF,IADD,CACMC,GAAG,IAAEH,OAAO,CAACG,GAAD,CADlB;AAGD,GAJQ,EAIP,CAACR,MAAD,CAJO,CAAT;AAMFU,EAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AAOE,sBACE;AAAA,eACCA,IAAI,KAAGQ,SAAP,gBAAiB,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAjB,GACDR,IAAI,CAACS,GAAL,CAAST,IAAI,iBAAE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAwB,qBAAY,QAApC;AAAA,gBAA8CA,IAAI,CAACU;AAAnD;AAAA;AAAA;AAAA;AAAA,YAAf,CAFA,eAME;AAAQ,MAAA,EAAE,EAAC,KAAX;AAAiB,MAAA,OAAO,EAAEX,kBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA,kBADF;AAeD;;GAjDQJ,S;UAE6BJ,iB;;;KAF7BI,S;AAmDT,eAAeA,SAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport useInfiniteScroll from '../hooks/useInfiniteScroll';\nimport Loading from './Loading';\nimport '../assets/index.css';\nimport CloseIssueIcon from './CloseIssueIcon';\nvar num=1\nfunction IssueList({status}) {\n\n  const [isFetching, setIsFetching] = useInfiniteScroll(fetchMoreListItems);\n  const[data,setData]=useState([])\n\n\nuseEffect(()=>{\n  \n})\n\n  function fetchMoreListItems() {\n    \n    fetch(`http://localhost:9000/issues?page=${num+=1}&issuesFilter=${status}`).then(res=>res.json())\n    .then(res=>setData([...data,...res]))\n\n  }\n\n\n\n\n\n  useEffect(()=>{\n    fetch(`http://localhost:9000/issues?page=1&issuesFilter=${status}`).then(res=>res.json())\n    .then(res=>setData(res))\n\n  },[status])\n\nconsole.log(data)\n\n\n\n\n\n\n  return (\n    <>\n    {data===undefined?<Loading />:\n    data.map(data=><div className=\"issues\" data-testid=\"issues\">{data.title}</div>)}\n      {/* <div className=\"issues\" data-testid=\"issues\"></div> */}\n      {/* <Loading /> */}\n\n      <button id=\"btn\" onClick={fetchMoreListItems} >add</button>\n      \n      {\n     }\n      {}\n    </>\n  );\n  \n}\n\nexport default IssueList;\n"]},"metadata":{},"sourceType":"module"}