{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Downloads\\\\issues-page\\\\src\\\\components\\\\IssueList.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport useInfiniteScroll from '../hooks/useInfiniteScroll';\nimport Loading from './Loading';\nimport '../assets/index.css';\nimport CloseIssueIcon from './CloseIssueIcon';\nvar num = 1;\n\nfunction IssueList({\n  status\n}) {\n  _s();\n\n  const [page] = useInfiniteScroll(status);\n  const [data, setData] = useState([]);\n  const [newdata, setnewData] = useState([]);\n\n  function fetchMoreListItems(page) {\n    fetch(`http://localhost:9000/issues?page=${page}&issuesFilter=${status}`).then(res => res.json()).then(res => setnewData(res));\n    setData([...data, ...newdata]);\n  }\n\n  useEffect(() => {\n    fetchMoreListItems(page);\n  }, [page]);\n  useEffect(() => {\n    fetch(`http://localhost:9000/issues?page=${page}&issuesFilter=${status}`).then(res => res.json()).then(res => setData(res));\n  }, [status]);\n  console.log(data);\n  console.log(page, status);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data.length === 0 ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 22\n    }, this) : data.map(data => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"issues\",\n      \"data-testid\": \"issues\",\n      children: data.title\n    }, Math.random(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 20\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(IssueList, \"vk0X9qcIAnfC8LwZWtbKiLl2C64=\", false, function () {\n  return [useInfiniteScroll];\n});\n\n_c = IssueList;\nexport default IssueList;\n\nvar _c;\n\n$RefreshReg$(_c, \"IssueList\");","map":{"version":3,"sources":["C:/Users/Lenovo/Downloads/issues-page/src/components/IssueList.js"],"names":["useEffect","useState","useInfiniteScroll","Loading","CloseIssueIcon","num","IssueList","status","page","data","setData","newdata","setnewData","fetchMoreListItems","fetch","then","res","json","console","log","length","map","title","Math","random"],"mappings":";;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,iBAAP,MAA8B,4BAA9B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,qBAAP;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,IAAIC,GAAG,GAAC,CAAR;;AACA,SAASC,SAAT,CAAmB;AAACC,EAAAA;AAAD,CAAnB,EAA6B;AAAA;;AAE3B,QAAM,CAACC,IAAD,IAASN,iBAAiB,CAACK,MAAD,CAAhC;AAEA,QAAK,CAACE,IAAD,EAAMC,OAAN,IAAeT,QAAQ,CAAC,EAAD,CAA5B;AACA,QAAK,CAACU,OAAD,EAASC,UAAT,IAAqBX,QAAQ,CAAC,EAAD,CAAlC;;AAEA,WAASY,kBAAT,CAA4BL,IAA5B,EAAkC;AAEhCM,IAAAA,KAAK,CAAE,qCAAoCN,IAAK,iBAAgBD,MAAO,EAAlE,CAAL,CAA0EQ,IAA1E,CAA+EC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EAApF,EACCF,IADD,CACMC,GAAG,IAAEJ,UAAU,CAACI,GAAD,CADrB;AAGAN,IAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAS,GAAGE,OAAZ,CAAD,CAAP;AAED;;AAGHX,EAAAA,SAAS,CAAC,MAAI;AACZa,IAAAA,kBAAkB,CAACL,IAAD,CAAlB;AACD,GAFQ,EAEP,CAACA,IAAD,CAFO,CAAT;AAKER,EAAAA,SAAS,CAAC,MAAI;AACZc,IAAAA,KAAK,CAAE,qCAAoCN,IAAK,iBAAgBD,MAAO,EAAlE,CAAL,CAA0EQ,IAA1E,CAA+EC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EAApF,EACCF,IADD,CACMC,GAAG,IAAEN,OAAO,CAACM,GAAD,CADlB;AAID,GALQ,EAKP,CAACT,MAAD,CALO,CAAT;AAOFW,EAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AAIAS,EAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ,EAAiBD,MAAjB;AAGE,sBACE;AAAA,cACCE,IAAI,CAACW,MAAL,KAAc,CAAd,gBAAgB,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAhB,GACDX,IAAI,CAACY,GAAL,CAASZ,IAAI,iBAAE;AAAyB,MAAA,SAAS,EAAC,QAAnC;AAA4C,qBAAY,QAAxD;AAAA,gBAAkEA,IAAI,CAACa;AAAvE,OAAUC,IAAI,CAACC,MAAL,EAAV;AAAA;AAAA;AAAA;AAAA,YAAf;AAFA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAhDQlB,S;UAEQJ,iB;;;KAFRI,S;AAkDT,eAAeA,SAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport useInfiniteScroll from '../hooks/useInfiniteScroll';\nimport Loading from './Loading';\nimport '../assets/index.css';\nimport CloseIssueIcon from './CloseIssueIcon';\nvar num=1\nfunction IssueList({status}) {\n\n  const [page] = useInfiniteScroll(status);\n \n  const[data,setData]=useState([])\n  const[newdata,setnewData]=useState([])\n\n  function fetchMoreListItems(page) {\n    \n    fetch(`http://localhost:9000/issues?page=${page}&issuesFilter=${status}`).then(res=>res.json())\n    .then(res=>setnewData(res))\n\n    setData([...data,...newdata])\n\n  }\n\n\nuseEffect(()=>{\n  fetchMoreListItems(page)\n},[page])\n\n\n  useEffect(()=>{\n    fetch(`http://localhost:9000/issues?page=${page}&issuesFilter=${status}`).then(res=>res.json())\n    .then(res=>setData(res))\n\n\n  },[status])\n\nconsole.log(data)\n\n\n\nconsole.log(page,status)\n\n\n  return (\n    <div >\n    {data.length===0?<Loading />:\n    data.map(data=><div key={Math.random()} className=\"issues\" data-testid=\"issues\">{data.title}</div>)}\n     \n      \n      {\n     }\n      {}\n    </div>\n  );\n  \n}\n\nexport default IssueList;\n"]},"metadata":{},"sourceType":"module"}