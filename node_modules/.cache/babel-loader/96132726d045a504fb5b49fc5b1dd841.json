{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Downloads\\\\issues-page\\\\src\\\\components\\\\IssueList.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport useInfiniteScroll from '../hooks/useInfiniteScroll';\nimport Loading from './Loading';\nimport '../assets/index.css';\nimport CloseIssueIcon from './CloseIssueIcon';\nvar num = 1;\n\nfunction IssueList({\n  status\n}) {\n  _s();\n\n  console.log('ss'); // const [isFetching, setIsFetching] = useInfiniteScroll(fetchMoreListItems);\n\n  const [data, setData] = useState([]);\n\n  function fetchMoreListItems() {// fetch(`http://localhost:9000/issues?page=${num+=1}&issuesFilter=${status}`).then(res=>res.json())\n    // .then(res=>setData([...data,...res]))\n  }\n\n  useEffect(() => {\n    fetch(`http://localhost:9000/issues?page=1&issuesFilter=${status}`).then(res => res.json()).then(res => setData(res));\n  }, [status]);\n  console.log(data);\n  useEffect(() => {\n    window.addEventListener(\"click\", fetchMoreListItems);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [data === undefined ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 23\n    }, this) : data.map(data => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"issues\",\n      \"data-testid\": \"issues\",\n      children: data.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 20\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"btn\",\n      onClick: fetchMoreListItems,\n      children: \"add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(IssueList, \"Gorwq0J2xYThgcskXDSejYY7S2A=\");\n\n_c = IssueList;\nexport default IssueList;\n\nvar _c;\n\n$RefreshReg$(_c, \"IssueList\");","map":{"version":3,"sources":["C:/Users/Lenovo/Downloads/issues-page/src/components/IssueList.js"],"names":["useEffect","useState","useInfiniteScroll","Loading","CloseIssueIcon","num","IssueList","status","console","log","data","setData","fetchMoreListItems","fetch","then","res","json","window","addEventListener","undefined","map","title"],"mappings":";;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,iBAAP,MAA8B,4BAA9B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,qBAAP;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,IAAIC,GAAG,GAAC,CAAR;;AACA,SAASC,SAAT,CAAmB;AAACC,EAAAA;AAAD,CAAnB,EAA6B;AAAA;;AAC3BC,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAD2B,CAG3B;;AACA,QAAK,CAACC,IAAD,EAAMC,OAAN,IAAeV,QAAQ,CAAC,EAAD,CAA5B;;AAKA,WAASW,kBAAT,GAA8B,CAE5B;AACA;AAED;;AAMDZ,EAAAA,SAAS,CAAC,MAAI;AACZa,IAAAA,KAAK,CAAE,oDAAmDN,MAAO,EAA5D,CAAL,CAAoEO,IAApE,CAAyEC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EAA9E,EACCF,IADD,CACMC,GAAG,IAAEJ,OAAO,CAACI,GAAD,CADlB;AAGD,GAJQ,EAIP,CAACR,MAAD,CAJO,CAAT;AAMFC,EAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AAIAV,EAAAA,SAAS,CAAC,MAAI;AACZiB,IAAAA,MAAM,CAACC,gBAAP,CAAwB,OAAxB,EAAgCN,kBAAhC;AACD,GAFQ,EAEP,EAFO,CAAT;AAOE,sBACE;AAAA,eACCF,IAAI,KAAGS,SAAP,gBAAiB,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAjB,GACDT,IAAI,CAACU,GAAL,CAASV,IAAI,iBAAE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAwB,qBAAY,QAApC;AAAA,gBAA8CA,IAAI,CAACW;AAAnD;AAAA;AAAA;AAAA;AAAA,YAAf,CAFA,eAME;AAAQ,MAAA,EAAE,EAAC,KAAX;AAAiB,MAAA,OAAO,EAAET,kBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA,kBADF;AAeD;;GApDQN,S;;KAAAA,S;AAsDT,eAAeA,SAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport useInfiniteScroll from '../hooks/useInfiniteScroll';\nimport Loading from './Loading';\nimport '../assets/index.css';\nimport CloseIssueIcon from './CloseIssueIcon';\nvar num=1\nfunction IssueList({status}) {\n  console.log('ss')\n\n  // const [isFetching, setIsFetching] = useInfiniteScroll(fetchMoreListItems);\n  const[data,setData]=useState([])\n\n\n\n\n  function fetchMoreListItems() {\n    \n    // fetch(`http://localhost:9000/issues?page=${num+=1}&issuesFilter=${status}`).then(res=>res.json())\n    // .then(res=>setData([...data,...res]))\n\n  }\n\n\n\n\n\n  useEffect(()=>{\n    fetch(`http://localhost:9000/issues?page=1&issuesFilter=${status}`).then(res=>res.json())\n    .then(res=>setData(res))\n\n  },[status])\n\nconsole.log(data)\n\n\n\nuseEffect(()=>{\n  window.addEventListener(\"click\",fetchMoreListItems)\n},[])\n\n\n\n\n  return (\n    <>\n    {data===undefined?<Loading />:\n    data.map(data=><div className=\"issues\" data-testid=\"issues\">{data.title}</div>)}\n      {/* <div className=\"issues\" data-testid=\"issues\"></div> */}\n      {/* <Loading /> */}\n\n      <button id=\"btn\" onClick={fetchMoreListItems}>add</button>\n      \n      {\n     }\n      {}\n    </>\n  );\n  \n}\n\nexport default IssueList;\n"]},"metadata":{},"sourceType":"module"}