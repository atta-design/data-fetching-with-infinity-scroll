{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Downloads\\\\issues-page\\\\src\\\\components\\\\IssueList.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport useInfiniteScroll from '../hooks/useInfiniteScroll';\nimport Loading from './Loading';\nimport '../assets/index.css';\nimport CloseIssueIcon from './CloseIssueIcon'; // var num=1\n\nfunction IssueList({\n  status\n}) {\n  _s();\n\n  // const [isFetching, setIsFetching] = useInfiniteScroll(fetchMoreListItems);\n  const [data, setData] = useState([]);\n  const [num, setnum] = useState(1);\n\n  function fetchMoreListItems() {\n    setnum(num + 1);\n    fetch(`http://localhost:9000/issues?page=${num}&issuesFilter=${status}`).then(res => res.json()).then(res => setData([...data, ...res]));\n  }\n\n  useEffect(() => {\n    fetch(`http://localhost:9000/issues?page=1&issuesFilter=${status}`).then(res => res.json()).then(res => setData(res));\n    console.log('ss');\n  }, [status]);\n  console.log(data);\n  console.log(num);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [data === undefined ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 23\n    }, this) : data.map(data => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"issues\",\n      \"data-testid\": \"issues\",\n      children: data.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 20\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchMoreListItems,\n      children: \"add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(IssueList, \"7qo0cwawfe11Na23RbaJ1svpfF4=\");\n\n_c = IssueList;\nexport default IssueList;\n\nvar _c;\n\n$RefreshReg$(_c, \"IssueList\");","map":{"version":3,"sources":["C:/Users/Lenovo/Downloads/issues-page/src/components/IssueList.js"],"names":["useEffect","useState","useInfiniteScroll","Loading","CloseIssueIcon","IssueList","status","data","setData","num","setnum","fetchMoreListItems","fetch","then","res","json","console","log","undefined","map","title"],"mappings":";;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,iBAAP,MAA8B,4BAA9B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,qBAAP;AACA,OAAOC,cAAP,MAA2B,kBAA3B,C,CACA;;AACA,SAASC,SAAT,CAAmB;AAACC,EAAAA;AAAD,CAAnB,EAA6B;AAAA;;AAC3B;AACA,QAAK,CAACC,IAAD,EAAMC,OAAN,IAAeP,QAAQ,CAAC,EAAD,CAA5B;AACF,QAAK,CAACQ,GAAD,EAAKC,MAAL,IAAaT,QAAQ,CAAC,CAAD,CAA1B;;AACE,WAASU,kBAAT,GAA8B;AAC5BD,IAAAA,MAAM,CAACD,GAAG,GAAC,CAAL,CAAN;AACAG,IAAAA,KAAK,CAAE,qCAAoCH,GAAI,iBAAgBH,MAAO,EAAjE,CAAL,CAAyEO,IAAzE,CAA8EC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EAAnF,EACCF,IADD,CACMC,GAAG,IAAEN,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAS,GAAGO,GAAZ,CAAD,CADlB;AAID;;AACDd,EAAAA,SAAS,CAAC,MAAI;AACZY,IAAAA,KAAK,CAAE,oDAAmDN,MAAO,EAA5D,CAAL,CAAoEO,IAApE,CAAyEC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EAA9E,EACCF,IADD,CACMC,GAAG,IAAEN,OAAO,CAACM,GAAD,CADlB;AAEAE,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACD,GAJQ,EAIP,CAACX,MAAD,CAJO,CAAT;AAKFU,EAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAYR,GAAZ;AAEE,sBACE;AAAA,eACCF,IAAI,KAAGW,SAAP,gBAAiB,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAjB,GACDX,IAAI,CAACY,GAAL,CAASZ,IAAI,iBAAE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAwB,qBAAY,QAApC;AAAA,gBAA8CA,IAAI,CAACa;AAAnD;AAAA;AAAA;AAAA;AAAA,YAAf,CAFA,eAME;AAAQ,MAAA,OAAO,EAAET,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA,kBADF;AAUD;;GA7BQN,S;;KAAAA,S;AA+BT,eAAeA,SAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport useInfiniteScroll from '../hooks/useInfiniteScroll';\nimport Loading from './Loading';\nimport '../assets/index.css';\nimport CloseIssueIcon from './CloseIssueIcon';\n// var num=1\nfunction IssueList({status}) {\n  // const [isFetching, setIsFetching] = useInfiniteScroll(fetchMoreListItems);\n  const[data,setData]=useState([])\nconst[num,setnum]=useState(1)\n  function fetchMoreListItems() {\n    setnum(num+1)\n    fetch(`http://localhost:9000/issues?page=${num}&issuesFilter=${status}`).then(res=>res.json())\n    .then(res=>setData([...data,...res]))\n    \n\n  }\n  useEffect(()=>{\n    fetch(`http://localhost:9000/issues?page=1&issuesFilter=${status}`).then(res=>res.json())\n    .then(res=>setData(res))\n    console.log('ss')\n  },[status])\nconsole.log(data)\nconsole.log(num)\n\n  return (\n    <>\n    {data===undefined?<Loading />:\n    data.map(data=><div className=\"issues\" data-testid=\"issues\">{data.title}</div>)}\n      {/* <div className=\"issues\" data-testid=\"issues\"></div> */}\n      {/* <Loading /> */}\n\n      <button onClick={fetchMoreListItems}>add</button>\n    </>\n  );\n}\n\nexport default IssueList;\n"]},"metadata":{},"sourceType":"module"}